// Variables used by Scriptable.
// These must be at the very top of the file. Do not edit.
// icon-color: cyan; icon-glyph: tasks;
// This script was downloaded using ScriptDude.
// Do not remove these lines, if you want to benefit from automatic updates.
// source: https://raw.githubusercontent.com/zaosoula/scriptable/main/dist/Notion%20Widget.js; docs: https://github.com/zaosoula/scriptable; hash: 000000000;
// Build at 2023-02-03T11:43:10
"use strict";function e(e,t,n,r){return new(n||(n=Promise))((function(a,i){function o(e){try{l(r.next(e))}catch(e){i(e)}}function s(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}l((r=r.apply(e,t||[])).next())}))}class t{constructor(e){this.base="https://api.notion.com/v1",this.secret=e}request(e,t,n){this.base.endsWith("/")||(this.base+="/"),t.startsWith("/")&&(t=t.slice(1));const r=new Request(t.includes("://")?t:`${this.base}${t}`);return r.method=e.toUpperCase(),r.body=n?JSON.stringify(n):null,r.url.startsWith(this.base)&&(r.headers={Authorization:`Bearer ${this.secret}`,"Notion-Version":"2022-06-28","Content-Type":"application/json"}),r}get(e){return this.request("GET",e).loadJSON()}post(e,t){return this.request("POST",e,t).loadJSON()}queryDatabase(e,t){return this.post(`databases/${e}/query`,t)}getDatabase(e){return this.get(`databases/${e}`)}getPage(e){return this.get(`pages/${e}`)}getImage(e){return this.request("GET",e).loadImage()}}const n=(()=>{function t(e){if(e&&e.constructor&&e.constructor.toString){let t=e.constructor.toString().match(/function\s*(\w+)/);if(t&&2==t.length)return t[1]}}function n(e,n){return Object.keys(n).forEach((r=>{if(-1!==r.indexOf("*")){if(!((r=r.replace("*",""))in e))throw new Error(`Method "${r}()" is not applicable to instance of ${t(e)}`);Array.isArray(n["*"+r])?e[r](...n["*"+r]):e[r](n[r])}else{if(!(r in e))throw new Error(`Property "${r}" is not applicable to instance of ${t(e)}`);e[r]=n[r]}})),e}function r(e,t){return t.forEach((t=>{if("text"===t.tag){const r=/(\$\$\[.+\])/gi;r.test(t.textContent)&&(t.textContent=t.textContent.replace(r,((e,t)=>i[t].toString())));let o=e.addText(t.textContent.replace(/&apos;/g,"'").replace(/&quot;/g,'"').replace(/&gt;/g,">").replace(/&lt;/g,"<").replace(/&amp;/g,"&"));n(o,a(t.attributes,"styles")),n(o,a(t.attributes,"attr"))}else if("spacer"===t.tag){let n=parseInt(a(t.attributes,"value"),10);n<1||isNaN(n)?e.addSpacer():e.addSpacer(n)}else if("image"===t.tag){let r=e.addImage(a(t.attributes,"src"));n(r,a(t.attributes,"styles")),n(r,a(t.attributes,"attr"))}else if("date"===t.tag){let r=e.addDate(a(t.attributes,"value"));n(r,a(t.attributes,"styles")),n(r,a(t.attributes,"attr"))}else if("stack"===t.tag){let i=e.addStack();n(i,a(t.attributes,"styles")),n(i,a(t.attributes,"attr")),r(i,t.children)}else if(-1!==["hstack","vstack"].indexOf(t.tag)){let i=e.addStack();i["hstack"===t.tag?"layoutHorizontally":"layoutVertically"](),n(i,a(t.attributes,"styles")),n(i,a(t.attributes,"attr")),r(i,t.children)}})),e}function a(e=[],t="styles"){let n={};return e.forEach((e=>{e.name.toLowerCase()===t.toLowerCase()&&(n=void 0!==i[e.value]?i[e.value]:e.value)})),n}const i={};function o(e,t){let n="";return e.forEach(((e,r)=>{if(t[r])if(Array.isArray(t[r])&&(t[r]=t[r].join("")),"string"==typeof t[r])n+=e+t[r];else{let a="$$["+UUID.string()+Math.floor(20*Math.random())+"]";i[a]=t[r],n+=e+a}else n+=e})),n}return{widgetMarkup:function(t,...i){return e(this,void 0,void 0,(function*(){let s=o(t,i),l=yield function(t){return e(this,void 0,void 0,(function*(){const e=new WebView;yield e.loadHTML("<html></html>");const n=`\n        var getAttributes = function (attributes) {\n            return Array.prototype.map.call(attributes, function (attribute) {\n                return {\n                    name: attribute.name,\n                    value: attribute.value\n                };\n            });\n        };\n        \n        var createDOMMap = function (element) {\n            return Array.prototype.map.call(element.childNodes, (function (node) {\n                if (node.nodeType !== 3 && node.nodeType !== 8) {\n                    var details = {\n                        tag: node.tagName.toLowerCase(),\n                        textContent: node.textContent,\n                        attributes: node.nodeType !== 1 ? [] : getAttributes(node.attributes)\n                    };\n                    details.children = createDOMMap(node);\n                    return details;\n                }\n                return null;\n            })).filter((e) => e !== null);\n        };\n        \n        function getDom() {\n            let htmlStr = '${t=`<tabom>${t=function(e){return(e=e.replace(/(\r\n|\n|\r)/gm,"")).replace(/<\s*text[^>]*>(.*?)<\s*\/\s*text>/gi,((e,t)=>e.replace(t,t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"))))}(t)}</tabom>`}';\n            const dom = new DOMParser();\n            let doc = dom.parseFromString(htmlStr, 'application/xml');\n            return JSON.stringify(createDOMMap(doc.documentElement));\n        }\n        try {\n            completion(getDom());\n        }\n        catch (err) {\n            completion([{\n                tag: 'error',\n                textContent: err.message\n            }]);\n        }    \n      `;let r=yield e.evaluateJavaScript(n,!0);const a=JSON.parse(r);if(a.length&&-1!==a[0].tag.toLocaleLowerCase().indexOf("error"))throw new Error(a[0].textContent);return a}))}(s);const c=l[0];if(void 0===c)throw new Error("WidgetMarkup requires that the <widget> element be the parent element of your widget.");const d=c.children,u=new ListWidget;return n(u,a(c.attributes,"styles")),n(u,a(c.attributes,"attr")),r(u,d),u}))},concatMarkup:function(e,...t){return o(e,t)}}})(),r=n.widgetMarkup,a=n.concatMarkup,i=!1,o=v(),s=v()?FileManager.iCloud():FileManager.local(),l=s.joinPath(s.documentsDirectory(),"cache/nobg"),c=`${Device.model()}_${Device.name()}`.replace(/[^a-zA-Z0-9\-\_]/,"").toLowerCase(),d=function({caller:t="none"}){return e(this,void 0,void 0,(function*(){const e=t;let n,r=(yield b())?"dark":"light",a="dark"==r?"light":"dark";s.fileExists(l)||s.createDirectory(l,!0),n="To change background make sure you have a screenshot of you home screen. Go to your home screen and enter wiggle mode. Scroll to the empty page on the far right and take a screenshot.";let d=yield p(n,["Pick Screenshot","Exit to Take Screenshot"],i);if(1==d)return!1;let u=yield Photos.fromLibrary(),m=u.size.height,v="";if(2436==m){let e=yield h();if(void 0===e["phone-model"]){n="What model of iPhone do you have?";let t=["iPhone 12 mini","iPhone 11 Pro, XS, or X"];d=yield p(n,t,i),e["phone-model"]=d,yield g(e),0===d&&(v="_mini")}else e["phone-model"]&&(v="_mini")}let S=y[m+v];if(!S)return n="It looks like you selected an image that isn't an iPhone screenshot, or your iPhone is not supported. Try again with a different image.",yield p(n,["OK"],i),!1;const k=["small","medium","large"];for(var $=0;$<k.length;$++){const e=k[$];let t=f[e].map((t=>{let n=t.toLowerCase().replace(" ","-"),r={pos:n,w:"",h:"",x:"",y:""};r.w=S[e].w,r.h=S[e].h,r.x=S.left;let a=n.split("-");return r.y=S[a[0]],"large"==e&&"bottom"==a[0]&&(r.y=S.middle),a.length>1&&(r.x=S[a[1]]),r}));for(var x=0;x<t.length;x++){const n=t[x],a=w(u,new Rect(n.x,n.y,n.w,n.h)),i=`${c}-${r}-${e}-${n.pos}.jpg`,d=s.joinPath(l,i);if(s.fileExists(d)){o&&(yield s.downloadFileFromiCloud(d));try{s.remove(d)}catch(e){}}s.writeImage(d,a)}}return n="self"!=e?`Slices saved for ${r} mode. You can switch to ${a} mode and run this again to also generate slices.`:"Slices saved.",yield p(n,["Ok"],i),!0}))},u=function(t,n=!1){return e(this,void 0,void 0,(function*(){let e=(yield b())?"dark":"light";var r=yield h(),a=n?null:r[t];if(!a){log(`Background for "${t}" is not yet set.`);const n=s.joinPath(l,`${c}-${e}-medium-top.jpg`);let o=!1;if(o=!!s.fileExists(n)||(yield d({caller:"self"})),o)var i=yield m(t);if(!i)return null;a=(r=yield h())[t]}const u=s.joinPath(l,`${c}-${e}-${a}.jpg`);if(!s.fileExists(u))return log(`Slice does not exists - ${c}-${e}-${a}.jpg`),null;return o&&(yield s.downloadFileFromiCloud(u)),s.readImage(u)}))},m=function(t){return e(this,void 0,void 0,(function*(){let e="What is the size of the widget?",n=["Small","Medium","Large","Cancel"],r=yield p(e,n,i);if(3==r)return!1;let a=n[r].toLowerCase();e="Where will it be placed on?";let o=f[a];o.push("Cancel");let s=yield p(e,o,i);if(s==o.length-1)return!1;let l=o[s].toLowerCase().replace(" ","-"),c=yield h();return c[t]=`${a}-${l}`,yield g(c),yield p("Background saved.",["Ok"],i),!0}))};function h(){return e(this,void 0,void 0,(function*(){const e=s.joinPath(l,"widget-positions.json");if(s.fileExists(e)){o&&(yield s.downloadFileFromiCloud(e));const t=s.readString(e);return JSON.parse(t)}return yield s.writeString(e,"{}"),{}}))}function g(t){return e(this,void 0,void 0,(function*(){const e=s.joinPath(l,"widget-positions.json");return o&&(yield s.downloadFileFromiCloud(e)),yield s.writeString(e,JSON.stringify(t)),t}))}function p(t="",n=["OK"],r=!1){return e(this,void 0,void 0,(function*(){let e=new Alert;e.message=t;for(var a=0;a<n.length;a++)e.addAction(n[a]);return r?yield e.presentSheet():yield e.presentAlert()}))}const f={small:["Top Left","Top Right","Middle Left","Middle Right","Bottom Left","Bottom Right"],medium:["Top","Middle","Bottom"],large:["Top","Bottom"]},y={2796:{models:["14 Pro Max"],small:{w:510,h:510},medium:{w:1092,h:510},large:{w:1092,h:1146},left:99,right:681,top:282,middle:918,bottom:1554},2556:{models:["14 Pro"],small:{w:474,h:474},medium:{w:1014,h:474},large:{w:1014,h:1062},left:82,right:622,top:270,middle:858,bottom:1446},2778:{models:["12 Pro Max","13 Pro Max","14 Plus"],small:{w:510,h:510},medium:{w:1092,h:510},large:{w:1092,h:1146},left:96,right:678,top:246,middle:882,bottom:1518},2532:{models:["12","12 Pro","13","14"],small:{w:474,h:474},medium:{w:1014,h:474},large:{w:1014,h:1062},left:78,right:618,top:231,middle:819,bottom:1407},2688:{models:["Xs Max","11 Pro Max"],small:{w:507,h:507},medium:{w:1080,h:507},large:{w:1080,h:1137},left:81,right:654,top:228,middle:858,bottom:1488},1792:{models:["11","Xr"],small:{w:338,h:338},medium:{w:720,h:338},large:{w:720,h:758},left:54,right:436,top:160,middle:580,bottom:1e3},2436:{models:["X","Xs","11 Pro"],small:{w:465,h:465},medium:{w:987,h:465},large:{w:987,h:1035},left:69,right:591,top:213,middle:783,bottom:1353},"2436_mini":{models:["12 Mini"],small:{w:465,h:465},medium:{w:987,h:465},large:{w:987,h:1035},left:69,right:591,top:231,middle:801,bottom:1371},2208:{models:["6+","6s+","7+","8+"],small:{w:471,h:471},medium:{w:1044,h:471},large:{w:1044,h:1071},left:99,right:672,top:114,middle:696,bottom:1278},1334:{models:["6","6s","7","8"],small:{w:296,h:296},medium:{w:642,h:296},large:{w:642,h:648},left:54,right:400,top:60,middle:412,bottom:764},1136:{models:["5","5s","5c","SE"],small:{w:282,h:282},medium:{w:584,h:282},large:{w:584,h:622},left:30,right:332,top:59,middle:399,bottom:399}};function w(e,t){let n=new DrawContext;return n.size=new Size(t.width,t.height),n.drawImageAtPoint(e,new Point(-t.x,-t.y)),n.getImage()}function b(){return e(this,void 0,void 0,(function*(){return!Color.dynamic(Color.white(),Color.black()).red}))}function v(){return module.filename.includes("Documents/iCloud~")}class S extends Map{constructor({keychainKey:e,defaultSettings:t}){super(),this.keychainKey=e,this.defaultSettings=JSON.parse(JSON.stringify(t)),this.load()}load(){const e=Keychain.contains(this.keychainKey)?Object.assign(Object.assign({},this.defaultSettings),this.readKeychain()):this.defaultSettings;return Object.entries(e).forEach((e=>this.set(...e))),this}get(e){return super.get(e)}patch(e){Object.entries(e).forEach((e=>this.set(...e)))}readKeychain(){return JSON.parse(Keychain.get(this.keychainKey))}save(){return Keychain.set(this.keychainKey,JSON.stringify(Object.fromEntries(this.entries()))),this}}const k=new S({keychainKey:"fr.zaosoula.notionwidget",defaultSettings:{notionSecret:"",databaseId:"",sorts:[],filter:{},color:"auto",useBackgroundImage:!1}});let $;function x(){return e(this,void 0,void 0,(function*(){yield O();const e=new Alert;if(args.queryParameters.settings)yield C();else if(args.queryParameters.refresh){const e=yield M();Script.setWidget(e),Script.complete(),App.close()}else if(args.queryParameters.background)yield d({caller:"self"}),yield u(Script.name(),!0);else{e.title=Script.name(),e.addAction("Preview the widget"),e.addAction("Open the settings"),e.addAction("Generate widget background"),e.addCancelAction("Close");switch(yield e.presentSheet()){case 0:(yield M()).presentMedium();break;case 1:yield C(),yield x();break;case 2:yield d({caller:"self"}),console.log(yield u(Script.name(),!0))}}}))}function C(){return e(this,void 0,void 0,(function*(){const e=(e,t,n)=>a`<option value="${e}" ${e==n?"selected":""}>${t}</option>`,t=new WebView;t.shouldAllowRequest=e=>!e.url.startsWith("http")||(Safari.open(e.url),!1),yield t.loadHTML(`\n<!DOCTYPE html>\n<html lang="en">\n\n<head>\n  <meta charset="UTF-8">\n  <meta http-equiv="X-UA-Compatible" content="IE=edge">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <link rel="stylesheet" href="https://unpkg.com/@picocss/pico@latest/css/pico.min.css">\n</head>\n\n<body>\n  <nav class="container-fluid">\n      <ul>\n        <li><strong>${Script.name()}</strong></li>\n      </ul>\n      <ul>\n      <li><a href="https://github.com/zaosoula/scriptable">Docs</a></li>\n      </ul>\n    </nav>\n    <hr />\n  <main class="container">\n    <details>\n      <summary>Notion settings</summary>\n      \n      <label for="notionSecret">Notion Integration Secret</label>\n      <input type="text" id="notionSecret" name="notionSecret" placeholder="secret_XXXXXXX" value="${k.get("notionSecret")}" required>\n      <small><a href="https://developers.notion.com/docs/create-a-notion-integration#step-1-create-an-integration">Create an integration</a></small>\n      \n      <label for="databaseId">Database ID</label>\n      <input type="text" id="databaseId" name="databaseId" placeholder="XXXXXXXXXX" value="${k.get("databaseId")}" required>\n      <small><a href="https://developers.notion.com/docs/create-a-notion-integration#step-2-share-a-database-with-your-integration">Share a database with your integration</a></small>\n\n      <label for="sorts">Sorts</label>\n      <textarea id="sorts" name="sorts" placeholder="[]" required>${JSON.stringify(k.get("sorts"),null,2)}</textarea>\n      <small><a href="https://developers.notion.com/reference/post-database-query-sort">Sort object</a></small>\n\n      <label for="filter">Filter</label>\n      <textarea id="filter" name="filter" placeholder="{}" required>${JSON.stringify(k.get("filter"),null,2)}</textarea>\n      <small><a href="https://developers.notion.com/reference/post-database-query-filter">Filter object</a></small>\n\n    </details>\n\n    <details>\n      <summary>Appearance</summary>\n      \n      <fieldset>\n        <label for="useBackgroundImage">\n          <input type="checkbox" id="useBackgroundImage" name="useBackgroundImage" role="switch" ${k.get("useBackgroundImage")?"checked":""}/>\n          Use background image \n        </label>\n        <small>\n          You can generate the background image from the main menu <a href=${URLScheme.forRunningScript()+"?background=true"}>here</a>\n        </small>\n      </fieldset>\n\n      <label for="color">Text color</label>\n      <select id="color" name="color" required>\n        ${e("auto","System",k.get("color"))}\n        ${e("black","Dark",k.get("color"))}\n        ${e("white","Light",k.get("color"))}\n      </select>\n    </details>\n  </main>\n\n  <script>\n    const parseJson = (val, fallback) => { try { return JSON.parse(val); } catch { return fallback; } };\n\n    window.getSettings = () => ({\n      ...Object.fromEntries(Array.from(document.querySelectorAll('input[name], textarea[name], select[name]')).map(input => [input.name, input.value])),\n      useBackgroundImage: document.querySelector("[name=useBackgroundImage]").checked,\n      sorts: parseJson(document.querySelector("[name=sorts]").value, []),\n      filter: parseJson(document.querySelector("[name=filter]").value, []),\n    })\n  <\/script>\n</body>\n</html>\n`),yield t.present();const n=yield t.evaluateJavaScript("window.getSettings()");k.patch(n),console.log(Object.fromEntries(k)),$=void 0,yield O()}))}function O(){return e(this,void 0,void 0,(function*(){try{yield P(),k.save()}catch(e){const t=new Alert;t.title="Failed to fetch data from notion",t.message=`It seems that the settings provided are not valid.\nNotion answered with an error:\n${e.message}`,t.addAction("Edit settings"),t.addCancelAction("Keep previous settings"),t.addDestructiveAction("Save anyway");switch(yield t.presentSheet()){case-1:return void k.load();case 0:yield C();break;case 1:k.save()}return}}))}function P(){return e(this,void 0,void 0,(function*(){const e=new t(k.get("notionSecret"));let n,r;if($?({database:n,query:r}=$):(n=yield e.getDatabase(k.get("databaseId")),r=yield e.queryDatabase(k.get("databaseId"),{filter:k.get("filter"),sorts:k.get("sorts")})),"error"===n.object||"error"===r.object)throw console.warn(n.message||r.message),new Error(n.message||r.message);return $={database:n,query:r},{database:n,query:r,notion:e}}))}function M(){return e(this,void 0,void 0,(function*(){try{const{database:t,query:n,notion:i}=yield P(),o=(t,n,{text:r,image:o}={image:{},text:{}})=>e(this,void 0,void 0,(function*(){return"external"!==(null==t?void 0:t.type)||t.external.url.endsWith(".svg")?"emoji"===(null==t?void 0:t.type)?a`<text styles="${r}">${t.emoji}</text>`:a`<image styles="${o}" src="${SFSymbol.named(n).image}" />`:a`<image styles="${o}" src="${yield i.getImage(t.external.url)}" />`})),s=`notion://www.notion.so/${k.get("databaseId")}`,l=n.results.map((e=>{var t,n;return{url:s,name:e.properties.Name.title[0].plain_text,date:null===(n=null===(t=e.properties.Deadline)||void 0===t?void 0:t.date)||void 0===n?void 0:n.start,icon:e.icon}})),c=s;let d=Color.dynamic(Color.black(),Color.white());"auto"!==k.get("color")&&(d=Color[k.get("color")]());let m=null;k.get("useBackgroundImage")&&(m=yield u(Script.name()));const h={widget:{backgroundImage:m},header:{stack:{url:c},icon:{image:{imageSize:new Size(20,20),tintColor:d},text:{font:Font.regularMonospacedSystemFont(15)}},text:{textColor:d,font:Font.boldSystemFont(15)},btnRefresh:{url:URLScheme.forRunningScript()+"?refresh=true",imageSize:new Size(20,20),tintColor:d},btnSettings:{url:URLScheme.forRunningScript()+"?settings=true",imageSize:new Size(20,20),tintColor:d}},task:{stack:{url:c},icon:{image:{imageSize:new Size(15,15),tintColor:d,imageOpacity:.75,url:c},text:{font:Font.regularMonospacedSystemFont(15)}},text:{textColor:d,font:Font.mediumSystemFont(15)},date:{textColor:d,font:Font.regularSystemFont(15),textOpacity:.75}}},g=Math.min(l.length,4);return yield r`
<widget styles="${h.widget}">
  <spacer value="16" />
  <hstack styles="${h.header.stack}">
    ${yield o(t.icon,"checklist",h.header.icon)}
    <spacer value="6" />
    <text styles="${h.header.text}">${t.title[0].plain_text}</text>
    <spacer />
    <image styles="${h.header.btnSettings}" src="${SFSymbol.named("gear").image}" />
    <spacer value="6" />
    <image styles="${h.header.btnRefresh}" src="${SFSymbol.named("arrow.clockwise.circle").image}" />
  </hstack>
  <spacer value="10" />
  <vstack>
    ${yield Promise.all(l.slice(0,g).map((t=>e(this,void 0,void 0,(function*(){return a`
        <hstack styles="${h.task.stack}">
         ${yield o(t.icon,"circle",h.task.icon)}
         <spacer value="6" />
         <text styles="${h.task.text}">${t.name}</text>
         ${t.date?a`
            <text styles="${h.task.date}"> — ${(new RelativeDateTimeFormatter).string(new Date(t.date),new Date)}</text>
          `:""}
        </hstack>
        <spacer value="8" />
      `})))))}
    ${l.length>g?a`
    <hstack>
      <image styles="${h.task.icon.image}" src="${SFSymbol.named("plus.circle").image}" />
      <spacer value="6" />
      <text styles="${h.task.text}">${(l.length-g).toString()} more</text>
    </hstack>
    <spacer value="8" />
    `:""}
    <spacer />
  </vstack>
</widget>
`}catch(e){throw console.warn("[buildWidget]"),console.error(e),e}}))}e(void 0,void 0,void 0,(function*(){config.runsInApp&&(yield x());const e=yield M();Script.setWidget(e)}));
